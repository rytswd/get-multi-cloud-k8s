name: ChatBot

on:
  issue_comment:
    # This shouldn't be called for comment deletion
    types:
      - created
      - edited

jobs:
  chatbot:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VERSION: 0.13.0
    defaults:
      run:
        working-directory: main/kubernetes
    # strategy:
    #   matrix:
    #     workspace:
    #       - default
    #       # - prod
    #       # - staging

    steps:
      - name: Handle with Comvent
        uses: rytswd/comvent@v0.2.0
        id: comvent
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-path: ../../github/comvent-chatbot.yaml

      #* ---------------------------------------------------------------------- *#

      - uses: actions/checkout@v2
        if: >
          steps.comvent.outputs.terraform-destroy-all != '' 
          || steps.comvent.outputs.terraform-plan-and-apply != ''
          || steps.comvent.outputs.terraform-plan-only != ''
      - uses: hashicorp/setup-terraform@v1
        if: >
          steps.comvent.outputs.terraform-destroy-all != '' 
          || steps.comvent.outputs.terraform-plan-and-apply != ''
          || steps.comvent.outputs.terraform-plan-only != ''
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_INIT_API_TOKEN }}
      - uses: google-github-actions/setup-gcloud@master
        if: >
          steps.comvent.outputs.terraform-destroy-all != '' 
          || steps.comvent.outputs.terraform-plan-and-apply != ''
          || steps.comvent.outputs.terraform-plan-only != ''
        with:
          version: "latest"
          project_id: rytswd-get-multi-cloud-k8s-v01
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Init
        if: >
          steps.comvent.outputs.terraform-destroy-all != '' 
          || steps.comvent.outputs.terraform-plan-and-apply != ''
          || steps.comvent.outputs.terraform-plan-only != ''
        # env:
        #   TF_WORKSPACE: ${{ matrix.workspace }}
        run: terraform init

      - name: Terraform Destroy
        if: steps.comvent.outputs.terraform-destroy-all != ''
        # env:
        #   TF_WORKSPACE: ${{ matrix.workspace }}
        run: terraform destroy -auto-approve

      - name: Terraform Plan
        id: plan
        if: >
          steps.comvent.outputs.terraform-plan-and-apply != ''
          || steps.comvent.outputs.terraform-plan-only != ''
        # env:
        #   TF_WORKSPACE: ${{ matrix.workspace }}
        run: terraform plan -no-color -out t.tfplan
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: >
          steps.comvent.outputs.terraform-plan-and-apply != ''
          || steps.comvent.outputs.terraform-plan-only != ''
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Terraform Plan has been run.

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: steps.comvent.outputs.terraform-plan-and-apply != ''
        # env:
        #   TF_WORKSPACE: ${{ matrix.workspace }}
        run: terraform apply "t.tfplan" -auto-approve
